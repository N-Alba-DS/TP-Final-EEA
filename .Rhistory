theme_minimal() +
theme(
axis.text.y = element_text(size = 10),
axis.text.x = element_text(angle = 45, hjust = 1)
) +
coord_flip()
knitr::opts_chunk$set(echo = TRUE)
library(GGally)
library(tidyverse)
library (rmarkdown)
library(readxl)
library(readr)
library(ggplot2)
library(ggthemes)
library(GGally)
library (tidymodels)
library (lmtest)
library (car)
library(lme4)
library(lmerTest)
library(MuMIn)
data <- read_excel("Larval_counts_emergence_time_and_adult_body_mass.xlsx", sheet = "VarE")
names(data)
#elimino filas donde b.mass.em = "na"
data <- data %>%
filter(b.mass.em != "na") %>%
mutate(b.mass.em = round(as.numeric(b.mass.em), 3)) %>%
mutate(dev.time = round(as.numeric(dev.time), 0)) %>%
select(-block.no)
# Convertir columnas categóricas a factores
data <- data %>%
mutate(
lar.density = as.factor(lar.density),
sex = as.factor(sex),
rep = as.factor(rep)
)
# Boxplot: Relación entre densidad larval, sexo, y masa corporal
ggplot(data, aes(x = lar.density, y = b.mass.em, fill = sex)) +
geom_boxplot() +
labs(
title = "Masa corporal segun densidad larval y sexo",
x = "Densidad larval",
y = "Masa corporal"
) +
theme_minimal()
data %>%
count(sex)
data_female= data %>%
filter(sex=="F")
data_female <- data_female %>%
filter(rep %in% as.character(1:8))
data_female <- data_female %>%
mutate(rep = if_else(lar.density == "high", as.numeric(rep) + 8, as.numeric(rep)))
data_female %>%
group_by(rep) %>%
summarise(n = n()) %>%
ggplot(aes(x = as.factor(rep), y = n)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
labs(
x = "Replica",
y = "Cantidad",
title = "Cantidad de larvas para cada replica"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)
)
ggplot(data_female, aes(x = lar.density, y = b.mass.em, fill = lar.density)) +
geom_boxplot() +
scale_color_brewer(palette = "Set2") +
geom_jitter(
size = 1.2,
alpha = 0.8,
color = "black", # Color negro para los puntos
position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.75)
)+
labs(
title = "Masa corporal segun densidad larval",
x = "Densidad larval",
y = "Masa corporal",
fill = "Larval Density"
) +
theme_minimal()
ggplot(data_female, aes(x = lar.density, y = b.mass.em, fill = factor(rep))) +
geom_boxplot(
outlier.shape = NA,
alpha = 0.7,
position = position_dodge(width = 0.75)
) +
geom_jitter(
size = 1.2,
alpha = 0.8,
color = "black",
position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.75)
)+
scale_fill_manual(values = scales::hue_pal()(16), name = "Réplica") +
scale_color_manual(values = scales::hue_pal()(16), name = "Réplica")+
labs(
x = "Densidad Larval",
y = "Masa Corporal",
title = "Boxplot de Masa Corporal por Tratamiento y Réplica"
) +
theme_minimal() +
theme(
legend.position = "right",
legend.title = element_text(size = 10),
legend.text = element_text(size = 8),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
strip.text = element_text(size = 10, face = "bold")
)
ggplot(data_female, aes(x = dev.time, y =b.mass.em, color = lar.density)) +
geom_point(size = 3, alpha = 0.8) +
geom_smooth(
method = "lm",
formula = y ~ x ,
se = TRUE,
size = 1.2
)+
scale_color_brewer(palette = "Set2") +
labs(
title = "Biomasa vs Tiempo",
x = "Tiempo (hs)",
y = "Biomasa",
color = "Densidad larval"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "top",
panel.grid.major = element_line(color = "grey80"),
panel.grid.minor = element_blank(),
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "grey20")
)
# Modelos
m0= lmer(b.mass.em ~ (1 | rep), data = data_female)
m1= lmer(b.mass.em ~ dev.time * lar.density + (1|rep), data=data_female) #no da significativa la interacion.
m2= lmer(b.mass.em ~ dev.time + lar.density + (1|rep), data=data_female)
m3= lmer(b.mass.em ~ dev.time + (1|rep), data=data_female)
m4= lmer(b.mass.em ~ lar.density + (1|rep), data=data_female)
anova(m0, m1)
anova(m0, m2)
anova(m0, m3)
anova(m0, m4)
anova(m2, m1)
anova(m2, m3)
anova(m2, m4)
summary(m1)
summary(m2)
res <- resid(m2)
pred <- predict(m2)
Bk <- ranef(m2)$rep$'(Intercept)'
par(mfrow = c(1, 3))
plot(pred, res, xlab="Predichos", ylab="Residuos", main="Residuos vs Predicciones")
abline(h=0, col="red")
qqnorm(res, main="QQ-plot Residuos")
qqline(res)
qqnorm(Bk, main="QQ-plot Efectos aleatorios")
qqline(Bk)
par(mfrow = c(1, 1))
shapiro.test(res)
shapiro.test(Bk)
# Transformación logarítmica
data_female$log_b.mass.em <- log(data_female$b.mass.em)
# Ajustar el modelo con la variable transformada
m2_log <- lmer(log_b.mass.em ~ dev.time + lar.density + (1|rep), data = data_female)
res <- resid(m2_log)
pred <- predict(m2_log)
Bk <- ranef(m2_log)$rep$'(Intercept)'
par(mfrow = c(1, 3))
plot(pred, res, xlab="Predichos", ylab="Residuos", main="Residuos vs Predicciones")
abline(h=0, col="red")
qqnorm(res, main="QQ-plot Residuos")
qqline(res)
qqnorm(Bk, main="QQ-plot Efectos aleatorios")
qqline(Bk)
par(mfrow = c(1, 1))
shapiro.test(res)
shapiro.test(Bk)
#Resumen del modelo
summary(m2_log)
#Calculo del ICC
var_rep <- as.data.frame(VarCorr(m2_log))$vcov[1]
var_residual <- attr(VarCorr(m2_log), "sc")^2
icc <- var_rep / (var_rep + var_residual)
icc
r2_values <- r.squaredGLMM(m2_log)
print(r2_values)
ranef_m2_log <- ranef(m2_log, condVar = TRUE)
ranef_df <- as.data.frame(ranef_m2_log$`rep`)
ranef_df$upper <- ranef_df$`(Intercept)` + 1.96 * sqrt(attr(ranef_m2_log$`rep`, "postVar")[1, 1, ])
ranef_df$lower <- ranef_df$`(Intercept)` - 1.96 * sqrt(attr(ranef_m2_log$`rep`, "postVar")[1, 1, ])
ranef_df$group <- rownames(ranef_df)
ranef_df$group <- ifelse(as.integer(ranef_df$group) <= 8,
paste0(ranef_df$group, ":low"),
paste0(ranef_df$group, ":high"))
ranef_df$intercept <- ranef_df$`(Intercept)`
ranef_df$group <- factor(ranef_df$group,
levels = c("1:low", "2:low", "3:low", "4:low",
"5:low", "6:low", "7:low", "8:low",
"9:high", "10:high", "11:high", "12:high",
"13:high", "14:high", "15:high", "16:high"))
ggplot(ranef_df, aes(x = group, y = intercept, ymin = lower, ymax = upper, color = intercept > 0)) +
geom_point(size = 3) +
geom_errorbar(width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = c("red", "blue"), guide = "none") +
labs(
title = "Efectos Aleatorios (BLUPs)",
x = "Réplica y Tratamiento",
y = "Efectos Aleatorios (Intercepto)"
) +
theme_minimal() +
theme(
axis.text.y = element_text(size = 10),
axis.text.x = element_text(angle = 45, hjust = 1)
) +
coord_flip()
ggplot(ranef_df, aes(x = group, y = intercept, ymin = lower, ymax = upper, color = intercept > 0)) +
geom_point(size = 3) +
geom_errorbar(width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = c("red", "blue"), guide = "none") +
labs(
title = "BLUPs",
x = "Réplica y Tratamiento",
y = "Efectos Aleatorios (Intercepto)"
) +
theme_minimal() +
theme(
axis.text.y = element_text(size = 10),
axis.text.x = element_text(angle = 45, hjust = 1)
) +
coord_flip()
knitr::opts_chunk$set(echo = TRUE)
library(GGally)
library(tidyverse)
library (rmarkdown)
library(readxl)
library(readr)
library(ggplot2)
library(ggthemes)
library(GGally)
library (tidymodels)
library (lmtest)
library (car)
library(lme4)
library(lmerTest)
library(MuMIn)
data <- read_excel("Larval_counts_emergence_time_and_adult_body_mass.xlsx", sheet = "VarE")
knitr::opts_chunk$set(echo = TRUE)
names(data)
library(GGally)
library(tidyverse)
library (rmarkdown)
library(readxl)
library(readr)
library(ggplot2)
library(ggthemes)
library(GGally)
library (tidymodels)
library (lmtest)
library (car)
library(lme4)
library(lmerTest)
library(MuMIn)
library(GGally)
library(tidyverse)
library (rmarkdown)
library(readxl)
library(readr)
library(ggplot2)
library(ggthemes)
library(GGally)
library (tidymodels)
library (lmtest)
library (car)
library(lme4)
library(lmerTest)
library(MuMIn)
data <- read_excel("Larval_counts_emergence_time_and_adult_body_mass.xlsx", sheet = "VarE")
names(data)
library(GGally)
library(tidyverse)
library (rmarkdown)
library(readxl)
library(readr)
library(ggplot2)
library(ggthemes)
library(GGally)
library (tidymodels)
library (lmtest)
library (car)
library(lme4)
library(lmerTest)
library(MuMIn)
library(GGally)
library(tidyverse)
library (rmarkdown)
library(readxl)
library(readr)
library(ggplot2)
library(ggthemes)
library(GGally)
library (tidymodels)
library (lmtest)
library (car)
library(lme4)
library(lmerTest)
library(MuMIn)
data <- read_excel("Larval_counts_emergence_time_and_adult_body_mass.xlsx", sheet = "VarE")
names(data)
View(data)
#elimino filas donde b.mass.em = "na"
data <- data %>%
filter(b.mass.em != "na") %>%
mutate(b.mass.em = round(as.numeric(b.mass.em), 3)) %>%
mutate(dev.time = round(as.numeric(dev.time), 0)) %>%
select(-block.no)
# Convertir columnas categóricas a factores
data <- data %>%
mutate(
lar.density = as.factor(lar.density),
sex = as.factor(sex),
rep = as.factor(rep)
)
# Boxplot: Relación entre densidad larval, sexo, y masa corporal
ggplot(data, aes(x = lar.density, y = b.mass.em, fill = sex)) +
geom_boxplot() +
labs(
title = "Masa corporal segun densidad larval y sexo",
x = "Densidad larval",
y = "Masa corporal"
) +
theme_minimal()
data %>%
count(sex)
data_female= data %>%
filter(sex=="F")
data_female <- data_female %>%
filter(rep %in% as.character(1:8))
data_female <- data_female %>%
mutate(rep = if_else(lar.density == "high", as.numeric(rep) + 8, as.numeric(rep)))
data_female %>%
group_by(rep) %>%
summarise(n = n()) %>%
ggplot(aes(x = as.factor(rep), y = n)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
labs(
x = "Replica",
y = "Cantidad",
title = "Cantidad de larvas para cada replica"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)
)
ggplot(data_female, aes(x = lar.density, y = b.mass.em, fill = lar.density)) +
geom_boxplot() +
scale_color_brewer(palette = "Set2") +
geom_jitter(
size = 1.2,
alpha = 0.8,
color = "black", # Color negro para los puntos
position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.75)
)+
labs(
title = "Masa corporal segun densidad larval",
x = "Densidad larval",
y = "Masa corporal",
fill = "Larval Density"
) +
theme_minimal()
ggplot(data_female, aes(x = lar.density, y = b.mass.em, fill = factor(rep))) +
geom_boxplot(
outlier.shape = NA,
alpha = 0.7,
position = position_dodge(width = 0.75)
) +
geom_jitter(
size = 1.2,
alpha = 0.8,
color = "black",
position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.75)
)+
scale_fill_manual(values = scales::hue_pal()(16), name = "Réplica") +
scale_color_manual(values = scales::hue_pal()(16), name = "Réplica")+
labs(
x = "Densidad Larval",
y = "Masa Corporal",
title = "Boxplot de Masa Corporal por Tratamiento y Réplica"
) +
theme_minimal() +
theme(
legend.position = "right",
legend.title = element_text(size = 10),
legend.text = element_text(size = 8),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
strip.text = element_text(size = 10, face = "bold")
)
ggplot(data_female, aes(x = dev.time, y =b.mass.em, color = lar.density)) +
geom_point(size = 3, alpha = 0.8) +
geom_smooth(
method = "lm",
formula = y ~ x ,
se = TRUE,
size = 1.2
)+
scale_color_brewer(palette = "Set2") +
labs(
title = "Biomasa vs Tiempo",
x = "Tiempo (hs)",
y = "Biomasa",
color = "Densidad larval"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
legend.position = "top",
panel.grid.major = element_line(color = "grey80"),
panel.grid.minor = element_blank(),
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "grey20")
)
# Modelos
m0= lmer(b.mass.em ~ (1 | rep), data = data_female)
m1= lmer(b.mass.em ~ dev.time * lar.density + (1|rep), data=data_female) #no da significativa la interacion.
m2= lmer(b.mass.em ~ dev.time + lar.density + (1|rep), data=data_female)
m3= lmer(b.mass.em ~ dev.time + (1|rep), data=data_female)
m4= lmer(b.mass.em ~ lar.density + (1|rep), data=data_female)
anova(m0, m1)
anova(m0, m2)
anova(m0, m3)
anova(m0, m4)
anova(m2, m1)
summary(m1)
anova(m2, m3)
anova(m2, m4)
summary(m2)
res <- resid(m2)
pred <- predict(m2)
Bk <- ranef(m2)$rep$'(Intercept)'
par(mfrow = c(1, 3))
plot(pred, res, xlab="Predichos", ylab="Residuos", main="Residuos vs Predicciones")
abline(h=0, col="red")
qqnorm(res, main="QQ-plot Residuos")
qqline(res)
qqnorm(Bk, main="QQ-plot Efectos aleatorios")
qqline(Bk)
par(mfrow = c(1, 1))
shapiro.test(res)
shapiro.test(Bk)
# Transformación logarítmica
data_female$log_b.mass.em <- log(data_female$b.mass.em)
# Ajustar el modelo con la variable transformada
m2_log <- lmer(log_b.mass.em ~ dev.time + lar.density + (1|rep), data = data_female)
res <- resid(m2_log)
pred <- predict(m2_log)
Bk <- ranef(m2_log)$rep$'(Intercept)'
par(mfrow = c(1, 3))
plot(pred, res, xlab="Predichos", ylab="Residuos", main="Residuos vs Predicciones")
abline(h=0, col="red")
qqnorm(res, main="QQ-plot Residuos")
qqline(res)
qqnorm(Bk, main="QQ-plot Efectos aleatorios")
qqline(Bk)
par(mfrow = c(1, 1))
shapiro.test(res)
shapiro.test(Bk)
#Resumen del modelo
summary(m2_log)
#Calculo del ICC
var_rep <- as.data.frame(VarCorr(m2_log))$vcov[1]
var_residual <- attr(VarCorr(m2_log), "sc")^2
icc <- var_rep / (var_rep + var_residual)
icc
r2_values <- r.squaredGLMM(m2_log)
print(r2_values)
ranef_m2_log <- ranef(m2_log, condVar = TRUE)
ranef_df <- as.data.frame(ranef_m2_log$`rep`)
ranef_df$upper <- ranef_df$`(Intercept)` + 1.96 * sqrt(attr(ranef_m2_log$`rep`, "postVar")[1, 1, ])
ranef_df$lower <- ranef_df$`(Intercept)` - 1.96 * sqrt(attr(ranef_m2_log$`rep`, "postVar")[1, 1, ])
ranef_df$group <- rownames(ranef_df)
ranef_df$group <- ifelse(as.integer(ranef_df$group) <= 8,
paste0(ranef_df$group, ":low"),
paste0(ranef_df$group, ":high"))
ranef_df$intercept <- ranef_df$`(Intercept)`
ranef_df$group <- factor(ranef_df$group,
levels = c("1:low", "2:low", "3:low", "4:low",
"5:low", "6:low", "7:low", "8:low",
"9:high", "10:high", "11:high", "12:high",
"13:high", "14:high", "15:high", "16:high"))
ggplot(ranef_df, aes(x = group, y = intercept, ymin = lower, ymax = upper, color = intercept > 0)) +
geom_point(size = 3) +
geom_errorbar(width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = c("red", "blue"), guide = "none") +
labs(
title = "BLUPs",
x = "Réplica y Tratamiento",
y = "Efectos Aleatorios (Intercepto)"
) +
theme_minimal() +
theme(
axis.text.y = element_text(size = 10),
axis.text.x = element_text(angle = 45, hjust = 1)
) +
coord_flip()
